<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

    <!-- Local C3P0 DataSource that works in any environment -->
    <!-- ("close" method to be called on shutdown) -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
        <property name="maxStatements" value="${jdbc.maxStatements}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}"/>
    </bean>

    <!-- Local Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <!--
            externalized the hibernate configuration for more easier maintain and
            different strategy, such as this without cluster cache.
        -->
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
        
        <!-- Interceptor to set the createTime and updateTime fields automatically -->
        <property name="entityInterceptor">
            <bean class="org.pprun.hjpetstore.persistence.AuditInterceptor" />
        </property>
        <property name="eventListeners">
            <map>
                <entry key="merge">
                    <bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
                </entry>
            </map>
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="userDao" class="org.pprun.hjpetstore.dao.hibernate.HibernateUserDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="categoryDao" class="org.pprun.hjpetstore.dao.hibernate.HibernateCategoryDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="productDao" class="org.pprun.hjpetstore.dao.hibernate.HibernateProductDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="itemDao" class="org.pprun.hjpetstore.dao.hibernate.HibernateItemDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="orderDao" class="org.pprun.hjpetstore.dao.hibernate.HibernateOrderDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="rsaKeyDao" class="org.pprun.hjpetstore.dao.hibernate.HibernateRSAKeyDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="paymentPartnerDao" class="org.pprun.hjpetstore.dao.hibernate.HibernatePaymentPartnerDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--  {@literal DAO} annotated {@code @Repository}is eligible for Spring DataAccessException translation. -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

</beans>
